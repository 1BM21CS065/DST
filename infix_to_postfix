#include<stdio.h>
#include<conio.h>
#define size 50

int top=-1;
char stack[size];

void push(char value)
{
    stack[++top]=value;
}

char pop()
{
    return stack[top--];
}

int presedance(char sym)
{
    if(sym=='^')
        return 3;
    else if(sym=='*'|| sym=='/')
        return 2;
    else if(sym=='+'||sym=='-')
        return 1;
    else return 0;
}

void main()
{
    char infix[size],postfix[size];
    int i=0,k=0;
    char ch,elem;
    printf("Enter infix expression \n");
    scanf("%s",infix);
    push('0');
    while((ch=infix[i++]) !='\0')
    {
        if(ch=='(')
            push(ch);
            else
            { if(isalnum(ch))
                postfix[k++]=ch;
              else
               {
                if(ch==')')
            {
                while(stack[top]!=')')
                {
                    postfix[k++]=pop();
                }
                elem=pop();
            }
            else
            {
                while(presedance(stack[top])>=presedance(ch))
                {
                    postfix[k++]=pop();
                }
                push(ch);
            }
        }
    }
}
while(stack[top]!='0')
{
    postfix[k++]=pop();
}
printf("\nPostfix Expression: %s",postfix);
}
